apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "..name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "..chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "..name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "..name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-token: 'true'
        vault.hashicorp.com/agent-init-first: 'true'
        vault.hashicorp.com/agent-pre-populate: 'true'
        vault.hashicorp.com/auth-path: auth/k8s-gold
        vault.hashicorp.com/namespace: platform-services
        vault.hashicorp.com/role: {{ .Values.vault.vaultSecretEngine }}
        vault.hashicorp.com/agent-inject-secret-postgres: {{ .Values.vault.vaultSecretEngine }}/{{ .Values.vault.postgresSecret }}
        vault.hashicorp.com/agent-inject-template-postgres: |
          {{`{{ with secret "`}}{{ .Values.vault.vaultSecretEngine }}/{{ .Values.vault.postgresSecret }}{{`" -}}
            export PGPASSWORD="{{ .Data.data.appuser_password }}"
            export PGUSER="{{ .Data.data.appuser_username }}"
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-realmregistry: {{ .Values.vault.vaultSecretEngine }}/{{ .Values.vault.realmRegistrySecret }}
        vault.hashicorp.com/agent-inject-template-realmregistry: |
          {{`{{ with secret "`}}{{ .Values.vault.vaultSecretEngine }}/{{ .Values.vault.realmRegistrySecret }}{{`" -}}
            export BCEID_SERVICE_BASIC_AUTH="{{ .Data.data.BCEID_SERVICE_BASIC_AUTH }}"
            export BCEID_SERVICE_ID="{{ .Data.data.BCEID_SERVICE_ID}}"
            export DEV_KC_CLIENT_ID="{{ .Data.data.DEV_KC_CLIENT_ID}}"
            export DEV_KC_CLIENT_SECRET="{{ .Data.data.DEV_KC_CLIENT_SECRET}}"
            export DEV_KC_URL="{{ .Data.data.DEV_KC_URL}}"
            export JWT_SECRET="{{ .Data.data.JWT_SECRET}}"
            export PROD_KC_CLIENT_ID="{{ .Data.data.PROD_KC_CLIENT_ID}}"
            export PROD_KC_CLIENT_SECRET="{{ .Data.data.PROD_KC_CLIENT_SECRET}}"
            export PROD_KC_URL="{{ .Data.data.PROD_KC_URL}}"
            export SSO_CLIENT_ID="{{ .Data.data.SSO_CLIENT_ID}}"
            export SSO_CLIENT_SECRET="{{ .Data.data.SSO_CLIENT_SECRET}}"
            export TEST_KC_CLIENT_ID="{{ .Data.data.TEST_KC_CLIENT_ID}}"
            export TEST_KC_CLIENT_SECRET="{{ .Data.data.TEST_KC_CLIENT_SECRET}}"
            export TEST_KC_URL="{{ .Data.data.TEST_KC_URL}}"
            export CHES_API_ENDPOINT="{{ .Data.data.CHES_API_ENDPOINT }}"
            export CHES_PASSWORD="{{ .Data.data.CHES_PASSWORD }}"
            export CHES_TOKEN_ENDPOINT="{{ .Data.data.CHES_TOKEN_ENDPOINT }}"
            export CHES_USERNAME="{{ .Data.data.CHES_USERNAME }}"
            export GH_ACCESS_TOKEN="{{ .Data.data.GH_ACCESS_TOKEN }}"
            export GH_API_TOKEN="{{ .Data.data.GH_API_TOKEN }}"
          {{- end }}`}}
    spec:
      initContainers:
        - name: initdb
          image: postgres:14.2-alpine
          command: ["bash", "-c"]
          args:
            - |
              source /vault/secrets/postgres;
              set -euo pipefail;
              psql -d $PGDATABASE_NAME -qtA --set ON_ERROR_STOP=1 << 'EOF'
              {{ .Files.Get "migration.sql" | nindent 20 -}}
              ;
              EOF
          env:
            - name: RELEASE_REVISION
              value: "{{ .Release.Revision }}"
            - name: PGHOST
              value: {{ .Values.postgres.host }}
            - name: PGPORT
              value: {{ .Values.postgres.port | quote }}
            - name: PGDATABASE_NAME
              value: {{ .Values.postgres.database }}
      serviceAccountName:  {{ .Values.vault.serviceAccountName }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/sh"]
          args: ['-c', '. /vault/secrets/postgres && . /vault/secrets/realmregistry && yarn start']
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            - name: RELEASE_REVISION
              value: "{{ .Release.Revision }}"
            - name: SSO_URL
              value: {{ .Values.sso.url }}
            - name: SSO_REDIRECT_URI
              value: {{ .Values.sso.redirectUri }}
            - name: SSO_LOGOUT_REDIRECT_URI
              value: {{ .Values.sso.logoutRedirectUri }}
            - name: SSO_AUTHORIZATION_RESPONSE_TYPE
              value: {{ .Values.sso.authorizationResponseType }}
            - name: SSO_AUTHORIZATION_SCOPE
              value: {{ .Values.sso.authorizationScope }}
            - name: SSO_TOKEN_GRANT_TYPE
              value: {{ .Values.sso.tokenGrantType }}
            - name: JWT_TOKEN_EXPIRY
              value: {{ .Values.jwt.tokenExpiry }}
            - name: PGHOST
              value: {{ .Values.postgres.host }}
            - name: PGPORT
              value: {{ .Values.postgres.port | quote }}
            - name: PGDATABASE
              value: {{ .Values.postgres.database }}
            - name: PGSSL
              value: {{ .Values.postgres.ssl | quote }}
            - name: DATABASE_URL
              value: postgresql://$(PGUSER):$(PGPASSWORD)@$(PGHOST):$(PGPORT)/$(PGDATABASE)?schema=public
            {{- range $key, $val := .Values.env }}
            - name: {{  $key | quote | upper }}
              value: {{ $val | quote }}
            {{- end }}
            {{- range $key, $val := .Values.extraEnv }}
            - name: {{  $key | quote | upper }}
              value: {{ $val | quote }}
            {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
